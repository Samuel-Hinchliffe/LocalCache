{"version":3,"file":"bundle.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAoB,WAAID,IAExBD,EAAiB,WAAIC,GACtB,CATD,CASGK,MAAM,I,sCCRTC,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,gBAAa,EAsGrBR,EAAQQ,WArGR,MAMI,UAAOC,CAAIC,GACP,MAAMC,EAAOC,aAAaC,QAAQH,GAClC,IAAKC,EACD,OAAO,KACX,MAAM,MAAEJ,EAAK,OAAEO,GAAWC,KAAKC,MAAML,GACrC,OAAIG,IACY,IAAIG,MACRC,UAAYJ,GAChBF,aAAaO,WAAWT,GACjB,MAGRH,CACX,CAQA,UAAOa,CAAIV,EAAKH,EAAOc,GACnB,IACI,MAAMC,EAAM,IAAIL,KACVM,EAAO,CACThB,MAAOA,EACPO,OAAQO,EAAMC,EAAIJ,UAAYG,EAAM,MAGxC,OADAT,aAAaY,QAAQd,EAAKK,KAAKU,UAAUF,KAClC,CACX,CACA,MAAOG,GAEH,OADAC,QAAQD,MAAMA,IACP,CACX,CACJ,CAKA,UAAOE,CAAIlB,GACPE,aAAaO,WAAWT,EAC5B,CAMA,aAAOmB,CAAOnB,GACV,OAAqC,OAA9BE,aAAaC,QAAQH,EAChC,CAIA,YAAOoB,GACHlB,aAAakB,OACjB,CAOA,UAAOT,CAAIX,GACP,MAAMqB,EAAUnB,aAAaC,QAAQH,GACrC,IAAKqB,EACD,OAAQ,EAEZ,MAAMR,EAAOR,KAAKC,MAAMe,GAClBT,EAAM,IAAIL,KAChB,OAAKM,EAAKT,QAAUQ,EAAIJ,UAAYK,EAAKT,QACrCF,aAAaO,WAAWT,IAChB,GAELa,EAAKT,OAASQ,EAAIJ,SAC7B,CAKA,8BAAOc,GACH,IACI,IAAKC,OAAOrB,aACR,OAAO,EAEX,MAAMsB,EAAI,mBAGV,OAFAtB,aAAaY,QAAQU,EAAGA,GACxBtB,aAAaO,WAAWe,IACjB,CACX,CACA,MAAOC,GACH,OAAO,CACX,CACJ,E,GCrGAC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAavC,QAGrB,IAAIC,EAASmC,EAAyBE,GAAY,CAGjDtC,QAAS,CAAC,GAOX,OAHAyC,EAAoBH,GAAUrC,EAAQA,EAAOD,QAASqC,GAG/CpC,EAAOD,OACf,C,6BCrBAK,OAAOC,eAAeN,EAAS,aAAc,CAAEO,OAAO,IACtDP,EAAQQ,gBAAa,EACrB,MAAMkC,EAAe,EAAQ,KAC7BrC,OAAOC,eAAeN,EAAS,aAAc,CAAE2C,YAAY,EAAMlC,IAAK,WAAc,OAAOiC,EAAalC,UAAY,G","sources":["webpack://LocalCache/webpack/universalModuleDefinition","webpack://LocalCache/./src/lib/LocalCache.ts","webpack://LocalCache/webpack/bootstrap","webpack://LocalCache/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LocalCache\"] = factory();\n\telse\n\t\troot[\"LocalCache\"] = factory();\n})(this, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalCache = void 0;\nclass LocalCache {\n    /**\n     * Retrieves the value associated with the specified key from the local storage.\n     * @param key - The key of the value to retrieve.\n     * @returns The value associated with the specified key, or null if the key does not exist.\n     */\n    static get(key) {\n        const data = localStorage.getItem(key);\n        if (!data)\n            return null;\n        const { value, expiry } = JSON.parse(data);\n        if (expiry) {\n            const now = new Date();\n            if (now.getTime() > expiry) {\n                localStorage.removeItem(key);\n                return null;\n            }\n        }\n        return value;\n    }\n    /**\n     * Sets a value in the local cache with the specified key.\n     * @param key - The key to associate with the value.\n     * @param value - The value to store in the local cache.\n     * @param ttl - The time-to-live (TTL) for the cached value in milliseconds. If provided, the value will expire after the specified TTL.\n     * @returns A boolean indicating whether the value was successfully set in the local cache.\n     */\n    static set(key, value, ttl) {\n        try {\n            const now = new Date();\n            const item = {\n                value: value,\n                expiry: ttl ? now.getTime() + ttl : null\n            };\n            localStorage.setItem(key, JSON.stringify(item));\n            return true;\n        }\n        catch (error) {\n            console.error(error);\n            return false;\n        }\n    }\n    /**\n     * Removes the item with the specified key from the local storage.\n     * @param key - The key of the item to remove.\n     */\n    static del(key) {\n        localStorage.removeItem(key);\n    }\n    /**\n     * Checks if a value with the specified key exists in the local storage.\n     * @param key - The key to check for existence.\n     * @returns `true` if a value with the specified key exists, `false` otherwise.\n     */\n    static exists(key) {\n        return localStorage.getItem(key) !== null;\n    }\n    /**\n     * Clears all the data stored in the localstorage.\n     */\n    static clear() {\n        localStorage.clear();\n    }\n    /**\n     * Retrieves the time-to-live (TTL) of a cached item.\n     *\n     * @param key - The key of the cached item.\n     * @returns The remaining time-to-live in milliseconds. Returns -1 if the item does not exist or has expired.\n     */\n    static ttl(key) {\n        const itemStr = localStorage.getItem(key);\n        if (!itemStr) {\n            return -1;\n        }\n        const item = JSON.parse(itemStr);\n        const now = new Date();\n        if (!item.expiry || now.getTime() > item.expiry) {\n            localStorage.removeItem(key);\n            return -1;\n        }\n        return item.expiry - now.getTime();\n    }\n    /**\n     * Checks if the localStorage is available in the current browser.\n     * @returns {boolean} Returns true if localStorage is available, false otherwise.\n     */\n    static isLocalStorageAvailable() {\n        try {\n            if (!window.localStorage) {\n                return false;\n            }\n            const x = '__storage_test__';\n            localStorage.setItem(x, x);\n            localStorage.removeItem(x);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\nexports.LocalCache = LocalCache;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LocalCache = void 0;\nconst LocalCache_1 = require(\"./lib/LocalCache\");\nObject.defineProperty(exports, \"LocalCache\", { enumerable: true, get: function () { return LocalCache_1.LocalCache; } });\n"],"names":["root","factory","exports","module","define","amd","this","Object","defineProperty","value","LocalCache","get","key","data","localStorage","getItem","expiry","JSON","parse","Date","getTime","removeItem","set","ttl","now","item","setItem","stringify","error","console","del","exists","clear","itemStr","isLocalStorageAvailable","window","x","e","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","LocalCache_1","enumerable"],"sourceRoot":""}